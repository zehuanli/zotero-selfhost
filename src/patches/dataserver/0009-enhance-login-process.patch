diff --git a/controllers/ApiController.php b/controllers/ApiController.php
index 390e962..9383c10 100644
--- a/controllers/ApiController.php
+++ b/controllers/ApiController.php
@@ -188,42 +188,33 @@ class ApiController extends Controller {
 			Zotero_DB::profileStart();
 		}
 		
-		// If HTTP Basic Auth credentials provided, authenticate
-		if (isset($_SERVER['PHP_AUTH_USER'])) {
-			$username = $_SERVER['PHP_AUTH_USER'];
-			$password = $_SERVER['PHP_AUTH_PW'];
-			
-			if ($username == Z_CONFIG::$API_SUPER_USERNAME
-					&& $password == Z_CONFIG::$API_SUPER_PASSWORD) {
-				if (!Z_ENV_TESTING_SITE
-						&& !IPAddress::isPrivateAddress($_SERVER['REMOTE_ADDR'])) {
-					error_log("Unexpected super-user request from " . $_SERVER['REMOTE_ADDR']);
-					Z_SNS::sendAlert(
-						"Unauthorized API access",
-						"{$_SERVER['REQUEST_METHOD']} {$_SERVER['REQUEST_URI']} from {$_SERVER['REMOTE_ADDR']}"
-					);
-					$this->e401('Invalid login');
-				}
-				$this->userID = 0;
-				$this->permissions = new Zotero_Permissions;
-				$this->permissions->setSuper();
-			}
-			
-			// Allow HTTP Auth for file access
-			else if (!empty($extra['allowHTTP']) || !empty($extra['auth'])) {
-				$userID = Zotero_Users::authenticate(
-					'password',
-					array('username' => $username, 'password' => $password)
-				);
-				if (!$userID) {
-					$this->e401('Invalid login');
-				}
-				$this->httpAuth = true;
-				$this->userID = $userID;
-				$this->grantUserPermissions($userID);
-			}
-		}
-		
+		// Try to get creds in JSON input body (sent by clients)
+                if (isset($this->body)) {
+                        $json = json_decode($this->body, true);
+                        if (isset($json) && isset($json['username']) && isset($json['password'])) {
+                                $username = $json['username'];
+                                $password = $json['password'];
+                        }
+                }
+
+                // Try to get creds from basic authentication header
+                if (! isset($username) && isset($_SERVER['PHP_AUTH_USER']) && isset($_SERVER['PHP_AUTH_PW'])) {
+                        $username = $_SERVER['PHP_AUTH_USER'];
+                        $password = $_SERVER['PHP_AUTH_PW'];
+                }
+
+                if (isset($username) && isset($password)) {
+                        $userID = Zotero_Users::authenticate(
+                                'password',
+                                array('username' => $username, 'password' => $password)
+                        );
+                        if (!$userID) {
+                                $this->e401('Invalid login');
+                        }
+                        $this->userID = $userID;
+                        $this->grantUserPermissions($userID);
+                }
+
 		if (!isset($this->userID)) {
 			$key = false;
 			// Allow Zotero-API-Key header
@@ -279,19 +270,6 @@ class ApiController extends Controller {
 					}
 				}
 			}
-			// Website cookie authentication
-			//
-			// For CSRF protection, session cookie has to be passed in the 'session' parameter,
-			// which JS code on other sites can't do because it can't access the website cookie.
-			else if (!empty($_GET['session']) &&
-					($this->userID = Zotero_Users::getUserIDFromSessionID($_GET['session']))) {
-				// Users who haven't synced may not exist in our DB
-				if (!Zotero_Users::exists($this->userID)) {
-					Zotero_Users::add($this->userID);
-				}
-				$this->grantUserPermissions($this->userID);
-				$this->cookieAuth = true;
-			}
 			// No credentials provided
 			else {
 				if (!empty($_GET['auth']) || !empty($extra['auth'])) {
@@ -305,9 +283,8 @@ class ApiController extends Controller {
 					$this->e403('An API key is required for write requests.');
 				}
 				
-				// Anonymous request
-				$this->permissions = new Zotero_Permissions;
-				$this->permissions->setAnonymous();
+				// Anonymous request (is not allowed)
+				$this->e401();
 			}
 		}
 		
